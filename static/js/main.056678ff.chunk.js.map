{"version":3,"sources":["App.jsx","index.jsx"],"names":["goods","App","useState","selectedGood","setSelectedGood","className","type","onClick","map","good","classNames","ReactDOM","render","document","getElementById"],"mappings":"4OAKaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAM,WACjB,MAAwCC,mBAAS,OAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAEA,OACE,uBAAMC,UAAU,oBAAhB,UACGF,EAEG,qBAAIE,UAAU,sCAAd,oBACMF,EADN,gBAGE,wBACE,UAAQ,cACRG,KAAK,SACLD,UAAU,cACVE,QAAS,kBAAMH,EAAgB,UAInC,oBAAIC,UAAU,QAAd,+BAEJ,uBAAOA,UAAU,QAAjB,SACE,gCACGL,EAAMQ,KAAI,SAACC,GAGV,OAFgBN,IAAiBM,EAI7B,qBACEJ,UAAWK,IAAW,GACpB,gCAGF,UAAQ,OALV,UAOE,6BACE,wBACE,UAASA,IAAW,GAClB,gBACFJ,KAAK,SACLD,UAAWK,IAAW,SACpB,WACFH,QAAS,kBAAMH,EAAgB,KANjC,iBAWF,oBAAI,UAAQ,YAAYC,UAAU,eAAlC,SACGI,MAhBEA,GAoBP,qBAEE,UAAQ,OAFV,UAIE,6BACE,wBACE,UAASC,IAAW,GAClB,aACFJ,KAAK,SACLD,UAAU,SACVE,QAAS,kBAAMH,EAAgBK,IALjC,iBAUF,oBAAI,UAAQ,YAAYJ,UAAU,eAAlC,SACGI,MAfEA,cCnEvBE,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.056678ff.chunk.js","sourcesContent":["import { useState } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App = () => {\n  const [selectedGood, setSelectedGood] = useState('Jam');\n\n  return (\n    <main className=\"section container\">\n      {selectedGood\n        ? (\n          <h1 className=\"title is-flex is-align-items-center\">\n            {`${selectedGood} is selected`}\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"ClearButton\"\n              type=\"button\"\n              className=\"delete ml-3\"\n              onClick={() => setSelectedGood('')}\n            />\n          </h1>\n        )\n        : <h1 className=\"title\">No goods selected</h1>}\n\n      <table className=\"table\">\n        <tbody>\n          {goods.map((good) => {\n            const hasGood = selectedGood === good;\n\n            return (\n              hasGood ? (\n                <tr\n                  className={classNames('',\n                    'has-background-success-light')\n                  }\n                  key={good}\n                  data-cy=\"Good\"\n                >\n                  <td>\n                    <button\n                      data-cy={classNames('',\n                        'RemoveButton')}\n                      type=\"button\"\n                      className={classNames('button',\n                        'is-info')}\n                      onClick={() => setSelectedGood('')}\n                    >\n                      -\n                    </button>\n                  </td>\n                  <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                    {good}\n                  </td>\n                </tr>\n              ) : (\n                <tr\n                  key={good}\n                  data-cy=\"Good\"\n                >\n                  <td>\n                    <button\n                      data-cy={classNames('',\n                        'AddButton')}\n                      type=\"button\"\n                      className=\"button\"\n                      onClick={() => setSelectedGood(good)}\n                    >\n                      +\n                    </button>\n                  </td>\n                  <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                    {good}\n                  </td>\n                </tr>\n              )\n            );\n          })}\n        </tbody>\n      </table>\n    </main>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}